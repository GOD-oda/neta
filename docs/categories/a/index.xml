<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>a on ODA WORLD</title>
    <link>https://oda.world/categories/a/</link>
    <description>Recent content in a on ODA WORLD</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>© 2021 ODA WORLD</copyright>
    <lastBuildDate>Sun, 13 Nov 2022 16:01:31 +0900</lastBuildDate><atom:link href="https://oda.world/categories/a/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LaravelでGraphQLを使う</title>
      <link>https://oda.world/posts/129/</link>
      <pubDate>Sun, 13 Nov 2022 16:01:31 +0900</pubDate>
      
      <guid>https://oda.world/posts/129/</guid>
      <description>前提 Laravelの初期化が終わっている versionは9.19 Lighthouseを使う versionは5.64 コードはこちらにまとめてあ</description>
    </item>
    
    <item>
      <title>amazon lightsail container serviceのイメージを削除するgithub actions</title>
      <link>https://oda.world/posts/126/</link>
      <pubDate>Sat, 15 Oct 2022 14:44:12 +0900</pubDate>
      
      <guid>https://oda.world/posts/126/</guid>
      <description>amazon lightsail container serviceに保持できるイメージ数は合計150なのでいつかは上限に達する その時に画面ポチポチで削除するのは手間でめんどいので自動でや</description>
    </item>
    
    <item>
      <title>lightsail container serviceで保存できるイメージ数の上限</title>
      <link>https://oda.world/posts/124/</link>
      <pubDate>Sat, 08 Oct 2022 22:37:51 +0900</pubDate>
      
      <guid>https://oda.world/posts/124/</guid>
      <description>結論 最大150個 確認 ECRを使わない場合にここに溜まっていく 上限に達した状態でpushした時 % aws lightsail push-container-image --service-name playground --label app --image playground-app . . . InvalidInputException: Maximum number of container service images has been reached {</description>
    </item>
    
    <item>
      <title>tagprの導入</title>
      <link>https://oda.world/posts/120/</link>
      <pubDate>Fri, 07 Oct 2022 19:36:25 +0900</pubDate>
      
      <guid>https://oda.world/posts/120/</guid>
      <description>前提 デプロイをgithub actionsで行っている バージョニングやリリース用タグを自動で打ちたい tagprとは いい感じにリリース用PRとC</description>
    </item>
    
    <item>
      <title>laravelでslack通知</title>
      <link>https://oda.world/posts/115/</link>
      <pubDate>Thu, 08 Sep 2022 15:30:37 +0900</pubDate>
      
      <guid>https://oda.world/posts/115/</guid>
      <description>環境 laravel/framework: ^9.2 laravel/slack-notification-channel: ^2.4 想定シーン 全ての例外をスラックに通知する アタッチメントを利用する 用意するもの slackのwebhook URL 登場人物 App\Exception\Handler App\Notifications\ExceptionNotification App\Notifications\SlackNotifiable Illuminate\Notifications\Messages\SlackMessage Illuminate\Notifications\Messages\SlackAttachment 実装 パ</description>
    </item>
    
    <item>
      <title>phpのenumをいい感じに使いたい</title>
      <link>https://oda.world/posts/106/</link>
      <pubDate>Mon, 08 Aug 2022 23:00:00 +0900</pubDate>
      
      <guid>https://oda.world/posts/106/</guid>
      <description>想定するケース コンテキストによって異なる属性を共通の型として扱いたいというケースで、要するにマッピングの話 例えばAとBという記事投稿サイトに</description>
    </item>
    
  </channel>
</rss>
